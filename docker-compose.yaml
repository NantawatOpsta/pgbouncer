version: "3"
services:
    postgresql:
        container_name: postgresql
        image: docker.io/bitnami/postgresql:16
        ports:
            - "5432:5432"
        volumes:
            - "postgresql_data_16_bitnami:/bitnami/postgresql"
            - ./postgres/postgresql.conf:/bitnami/postgresql/conf/postgresql.conf
        environment:
            - POSTGRESQL_DATABASE=django
            - "ALLOW_EMPTY_PASSWORD=yes"

    pgbouncer:
        container_name: pgbouncer
        image: docker.io/bitnami/pgbouncer:1.20.1
        ports:
            - 6432:6432
        volumes:
            - ./pgbouncer/pgbouncer.ini:/bitnami/pgbouncer/conf/pgbouncer.ini
        environment:
            - PGBOUNCER_DATABASE="*"
            - PGBOUNCER_AUTH_TYPE=trust
            - POSTGRESQL_HOST=postgresql
            - POSTGRESQL_USERNAME=postgres
            - POSTGRESQL_DATABASE=django

    nginx:
        container_name: nginx
        build:
            context: nginx
            dockerfile: Dockerfile
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "80:80"

    # dashboard:
    #     container_name: dashboard
    #     image: "apache/apisix-dashboard"
    #     volumes:
    #         - ./apisix/dashboard.yaml:/usr/local/apisix/conf/config.yaml:ro
    #     ports:
    #         - "9000:9000/tcp"
    #     depends_on:
    #         - etcd
    
    apisix:
        container_name: apisix
        image: apache/apisix:3.8.0-debian
        volumes:
            - ./apisix/config.yaml:/usr/local/apisix/conf/config.yaml:ro
        depends_on:
            - etcd
        ports:
            - "9180:9180/tcp"
            - "9080:9080/tcp"
            - "9091:9091/tcp"
            - "9443:9443/tcp"
            - "9092:9092/tcp"

    etcd:
        image: bitnami/etcd:3.4.14
        user: root
        restart: always
        volumes:
            - ../example/etcd_data:/etcd_data
        environment:
            ETCD_DATA_DIR: /etcd_data
            ETCD_ENABLE_V2: "true"
            ALLOW_NONE_AUTHENTICATION: "yes"
            ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
            ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
        ports:
            - "2379:2379/tcp"

    django-00:
        container_name: django-00
        build:
            context: django
            dockerfile: Dockerfile
        command: gunicorn myapp.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2
        user: 1000:1000
        volumes:
            - ./django/source:/code
        ports:
            - "8000:8000"
        environment:
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        depends_on:
            - postgresql
            - pgbouncer

    django-01:
        container_name: django-01
        build:
            context: django
            dockerfile: Dockerfile
        command: gunicorn myapp.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2
        user: 1000:1000
        volumes:
            - ./django/source:/code
        ports:
            - "8001:8000"
        environment:
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        depends_on:
            - postgresql
            - pgbouncer

    django-02:
        container_name: django-02
        build:
            context: django
            dockerfile: Dockerfile
        command: gunicorn myapp.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2
        user: 1000:1000
        volumes:
            - ./django/source:/code
        ports:
            - "8002:8000"
        environment:
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        depends_on:
            - postgresql
            - pgbouncer

    master-locust:
        container_name: master-locust
        image: locustio/locust
        ports:
            - "8089:8089"
        volumes:
            - ./locust/source:/mnt/locust
        command: -f /mnt/locust/locustfile.py --master -H http://apisix:9080/api/blog/ -u 200 -r 100
        # command: -f /mnt/locust/locustfile.py --master -H http://django-01:8000/api/blog/ -u 1000 -r 100

    worker-locust-00:
        container_name: worker-locust-0
        image: locustio/locust
        volumes:
            - ./locust/source:/mnt/locust
        command: -f /mnt/locust/locustfile.py --worker --master-host master-locust

    worker-locust-1:
        container_name: worker-locust-1
        image: locustio/locust
        volumes:
            - ./locust/source:/mnt/locust
        command: -f /mnt/locust/locustfile.py --worker --master-host master-locust

    # worker-locust-2:
    #     container_name: worker-locust-2
    #     image: locustio/locust
    #     volumes:
    #         - ./locust/source:/mnt/locust
    #     command: -f /mnt/locust/locustfile.py --worker --master-host master-locust

    # worker-locust-3:
    #     container_name: worker-locust-3
    #     image: locustio/locust
    #     volumes:
    #         - ./locust/source:/mnt/locust
    #     command: -f /mnt/locust/locustfile.py --worker --master-host master-locust

    # worker-locust-4:
    #     container_name: worker-locust-4
    #     image: locustio/locust
    #     volumes:
    #         - ./locust/source:/mnt/locust
    #     command: -f /mnt/locust/locustfile.py --worker --master-host master-locust

    # worker-locust-5:
    #     container_name: worker-locust-5
    #     image: locustio/locust
    #     volumes:
    #         - ./locust/source:/mnt/locust
    #     command: -f /mnt/locust/locustfile.py --worker --master-host master-locust

volumes:
    postgresql_data_16_bitnami:
        driver: local
    etcd_data:
        driver: local
